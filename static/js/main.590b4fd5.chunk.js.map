{"version":3,"sources":["images/julius_caesar.png","images/marcus_aurelius.png","images/octavius_augustus.png","images/carcalla.png","images/marcus_cicero.png","images/marcus_traianus.png","images/antoninus_pius.png","images/imgIndex.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","romans.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","images","julius_caesar","require","marcus_aurelius","octavius_augustus","carcalla","marcus_cicero","marcus_traianus","antoninus_pius","Card","id","name","info","image","className","alt","src","Images","CardList","romans","map","i","key","SearchBox","searchChange","type","onChange","Scroll","props","children","ErrorBoundry","state","hasError","error","this","setState","Component","App","onSearchChange","event","searchfield","target","value","filteredRomans","filter","roman","toLowerCase","includes","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.590b4fd5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/julius_caesar.e605b6ca.png\";","module.exports = __webpack_public_path__ + \"static/media/marcus_aurelius.fa81d08d.png\";","module.exports = __webpack_public_path__ + \"static/media/octavius_augustus.545d4c2a.png\";","module.exports = __webpack_public_path__ + \"static/media/carcalla.5c43258f.png\";","module.exports = __webpack_public_path__ + \"static/media/marcus_cicero.0287ab6a.png\";","module.exports = __webpack_public_path__ + \"static/media/marcus_traianus.6c92a2ed.png\";","module.exports = __webpack_public_path__ + \"static/media/antoninus_pius.97f30d3b.png\";","const images = {\r\n\tjulius_caesar: require('./julius_caesar.png'),\r\n\tmarcus_aurelius: require('./marcus_aurelius.png'),\r\n\toctavius_augustus: require('./octavius_augustus.png'),\r\n\tcarcalla: require('./carcalla.png'),\r\n\tmarcus_cicero: require('./marcus_cicero.png'),\r\n\tmarcus_traianus: require('./marcus_traianus.png'),\r\n\tantoninus_pius: require('./antoninus_pius.png')\r\n}\r\n\r\nexport default images;","import React from 'react';\r\nimport '../index.css';\r\nimport Images from '../images/imgIndex'\r\n\r\nconst Card = ({ id, name, info, image }) => {\r\n\treturn (\r\n\t\t<div className='roman-card'>\r\n\t\t\t<img className='bust' alt={image} src={Images[image]} />\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{info}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ romans }) => {\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t{\r\n\t\t\t\tromans.map((name, i) => {\r\n\t\t\t\t\treturn <Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={romans[i].id} \r\n\t\t\t\t\t\tname={romans[i].name} \r\n\t\t\t\t\t\tinfo={romans[i].info} \r\n\t\t\t\t\t\timage={romans[i].image} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn (\r\n\t\t<div className='roman-input'>\r\n\t\t\t<label>Search</label>\r\n\t\t\t<input\r\n\t\t\t\tclassName='roman-textbox'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div className='scroll-bar'>\r\n\t\t\t{props.children}\r\n\t\t</div>\t\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { hasError } = this.state;\r\n\t\tif (hasError) {\r\n\t\t\treturn <div className='container'>\r\n\t\t\t\tError loading page...\r\n\t\t\t</div>;\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","export const romans = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tname: 'Gaius Julius Caesar',\r\n\t\tinfo: 'Conqueror of Gaul. Roman general and dictator during the first century B.C.',\r\n\t\timage: 'julius_caesar'\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tname: 'Marcus Aurelius',\r\n\t\tinfo: 'The wise. Roman emperor and philosopher during the second century A.C.',\r\n\t\timage: 'marcus_aurelius'\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tname: 'Gaius Octavius Turinus',\r\n\t\tinfo: 'First emperor of Rome. Grandson of Julius Caesar. His reign initiated the Pax Romana during 40 years and ending on 14 A.D.',\r\n\t\timage: 'octavius_augustus'\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tname: 'Lucius Septimius Bassianus',\r\n\t\tinfo: 'Roman emperor of the Severus dinasty. Better known as Carcalla after the Gallic hooded tunic that he wore and made fashionable. ',\r\n\t\timage: 'carcalla'\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\tname: 'Marcus Tullius Cicero',\r\n\t\tinfo: 'Roman statesman, lawyer and Academic Skeptic philosopher. He played an important role in late Republic politics. He had an immense influence on Latin lenguage.',\r\n\t\timage: 'marcus_cicero'\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\tname: 'Marcus Ulpius Traianus',\r\n\t\tinfo: 'First hispanic emperor. Famous for his civilian administration. Built the Trajan\\'s Column and Forum. Expanded the empirte to its greatest territorial extent.',\r\n\t\timage: 'marcus_traianus'\r\n\t},\r\n\t{\r\n\t\tid: 7,\r\n\t\tname: 'Titus Aurelius Antoninus',\r\n\t\tinfo: 'Roman emperor. Adoptive father of Marcus Aurelius after being adopted by Adrianus. His reign was pacific and he never left Rome during it.',\r\n\t\timage: 'antoninus_pius'\r\n\t}\r\n];","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport { romans } from '../romans';\r\n\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tromans: romans,\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { romans, searchfield } = this.state;\r\n\t\tconst filteredRomans = romans.filter(roman => {\r\n\t\t\treturn roman.name.toLowerCase()\r\n\t\t\t\t.includes(searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className='roman-header'>\r\n\t\t\t\t\tRoman Celebrities\r\n\t\t\t\t</h1>\r\n\t\t\t\t<SearchBox \r\n\t\t\t\t\tclassName='roman-textbox' \r\n\t\t\t\t\tsearchChange={this.onSearchChange} \r\n\t\t\t\t/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardList romans={filteredRomans} />\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}